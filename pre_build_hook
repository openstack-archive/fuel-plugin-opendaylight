#!/bin/bash

# Add here any the actions which are required before plugin build
# like packages building, packages downloading from mirrors and so on.
# The script should return 0 if there were no errors.
set -eux
CACHE=${CACHE:-false}
RENEW=${RENEW:-false}
DIR="$(dirname `readlink -f $0`)"

if [ "$CACHE" == true ];then
  export cache_dir=$DIR/.cache/;
  if [ -e $cache_dir ] && [[ "$RENEW" == false ]];then
    export OPNFV_QUAGGE_PACKAGING_REPO=$cache_dir/opnfv-quagga/;
    export NETWORKING_ODL_REPO=$cache_dir/networking_odl/;
    export ODL_TARBALL_LOCATION=$cache_dir/karaf-odl.tar.gz;
  fi
fi
# Where we can find odl karaf distribution tarball
# can be http(s) url or absolute path
ODL_TARBALL_LOCATION=${ODL_TARBALL_LOCATION:-https://nexus.opendaylight.org/content/groups/public/org/opendaylight/integration/distribution-karaf/0.5.0-Boron/distribution-karaf-0.5.0-Boron.tar.gz}
ODL_EXPERIMENTAL_TARBALL_LOCATION=${ODL_EXPERIMENTAL_TARBALL_LOCATION:-https://nexus.opendaylight.org/content/repositories/public/org/opendaylight/integration/distribution-karaf/0.5.1-Boron-SR1/distribution-karaf-0.5.1-Boron-SR1.tar.gz}
ODL_EXPERIMENTAL_DEB_NAME=${ODL_EXPERIMENTAL_DEB_NAME:-opendaylight-experimental}

#Verion number used in deb/rpm package
ODL_VERSION_NUMBER=${ODL_VERSION_NUMBER:-0.5.0}
ODL_EXPERIMENTAL_VERSION_NUMBER=${ODL_EXPERIMENTAL_VERSION_NUMBER:-0.5.1}
ODL_DESCRIPTION="OpenDaylight SDN Controller"
TMP_NAME="karaf-odl.tar.gz"

#Networking odl
NETWORKING_ODL_REPO=${NETWORKING_ODL_REPO:-https://github.com/openstack/networking-odl.git}
NETWORKING_ODL_BRANCH=${NETWORKING_ODL_BRANCH:-stable/newton}

#Opnfv-quagga-packaging
OPNFV_QUAGGE_PACKAGING_REPO=${OPNFV_QUAGGE_PACKAGING_REPO:-https://github.com/nikolas-hermanns/opnfv-quagga-packaging}
OPNFV_QUAGGE_PACKAGING_BRANCH=stable/colorado

# For which systems odl package should be build
BUILD_FOR=${BUILD_FOR:-ubuntu}

DIR="$(dirname `readlink -f $0`)"
TMP_DIR="${DIR}/tmp"
MODULES="${DIR}/deployment_scripts/puppet/modules"

#Remove temporary files
CLEANUP=${CLEANUP:-true}

function cleanup {
  rm -rf "${TMP_DIR}"
}

function download {
  wget "$1" -qO $2
}

function unpack {
  mkdir "${TMP_DIR}/${2}"
  tar xzf $1 --strip-components=1 -C "${TMP_DIR}/${2}"
}

function add_opnfv_quagga {
    path=$1
    pushd ${TMP_DIR}
        git clone $OPNFV_QUAGGE_PACKAGING_REPO opnfv-quagga
        pushd opnfv-quagga
            git checkout $OPNFV_QUAGGE_PACKAGING_BRANCH
            if [ ! -e debian_package/ ];then
                sudo apt-get -y install `cat requirements.txt`
                make -j6
            fi
            cp debian_package/* $path
        popd
    popd
}

function patch_networking_odl_deb {
  if grep -q "neutron-lib>=0.1.0" $1
  then
    sed -i -e "s/neutron-lib>=0.1.0/neutron-lib>=0.0.1/" $1
  fi
}

function get_karaf {
  if [[ "$1" =~ ^http.* ]]
  then
    download $1 $2
    unpack $2 $3
  else
    unpack $1 $3
  fi
}

function build_pkg {
  # clean up
  rm -rf ${DIR}/repositories/${1}/*
  case $1 in
    centos)
      pushd "${DIR}/repositories/${1}/"
      fpm --force -s dir -t rpm --version "${ODL_VERSION_NUMBER}" --description "${ODL_DESCRIPTION}" --prefix /opt/opendaylight --rpm-init "${DIR}/odl_package/${1}/opendaylight" --after-install "${DIR}/odl_package/${1}/opendaylight-post" --name opendaylight -d "java-1.7.0-openjdk" -C "${TMP_DIR}/opendaylight_src"
      popd
      ;;
    ubuntu)
      pushd "${DIR}/repositories/${1}/"
      fpm --architecture all --force -s dir -t deb -m 'mskalski@mirantis.com' --version "${ODL_VERSION_NUMBER}" --description "${ODL_DESCRIPTION}" --prefix /opt/opendaylight --deb-upstart "${DIR}/odl_package/${1}/opendaylight" --after-install "${DIR}/odl_package/${1}/opendaylight-post" --name opendaylight -d openjdk-8-jre-headless -C "${TMP_DIR}/opendaylight_src"
      if [ "$ODL_EXPERIMENTAL_TARBALL_LOCATION" != false ] ; then
        fpm --architecture all --force -s dir -t deb -m 'mskalski@mirantis.com' --version "${ODL_EXPERIMENTAL_VERSION_NUMBER}" --description "${ODL_DESCRIPTION}" --prefix /opt/opendaylight --deb-upstart "${DIR}/odl_package/${1}/opendaylight" --after-install "${DIR}/odl_package/${1}/opendaylight-post" --name "${ODL_EXPERIMENTAL_DEB_NAME}" -d openjdk-8-jre-headless -C "${TMP_DIR}/${ODL_EXPERIMENTAL_DEB_NAME}_src"
      fi
      patch_networking_odl_deb ${TMP_DIR}/networking_odl/requirements.txt
      fpm --architecture all --force -s python -t deb -m 'mskalski@mirantis.com' --python-install-lib /usr/lib/python2.7/dist-packages ${TMP_DIR}/networking_odl/setup.py
      popd
      add_opnfv_quagga "${DIR}/repositories/${1}/"
      ;;
    *) echo "Not supported system"; exit 1;;
  esac
}

command -v fpm >/dev/null 2>&1 || { echo >&2 "fpm ruby gem required but it's not installed.  Aborting."; exit 1; }

cleanup

mkdir -p "${TMP_DIR}"

pushd $TMP_DIR

get_karaf $ODL_TARBALL_LOCATION "karaf-odl.tar.gz" "opendaylight_src"

if [ "$ODL_EXPERIMENTAL_TARBALL_LOCATION" != false ] ; then
  get_karaf $ODL_EXPERIMENTAL_TARBALL_LOCATION "karaf-experimental-odl.tar.gz" "${ODL_EXPERIMENTAL_DEB_NAME}_src"
fi

git clone $NETWORKING_ODL_REPO networking_odl
pushd networking_odl
git checkout $NETWORKING_ODL_BRANCH
popd

for system in $BUILD_FOR
do
  build_pkg $system
done

if [ "$CACHE" == true ];then
  if [ ! -e $cache_dir ] || [[ "$RENEW" == true ]];then
    rm -rf $cache_dir
    mkdir -p $cache_dir
    cp -r ${DIR}/tmp/* $cache_dir/
  fi
fi

if [ "$CLEANUP" != false ];then
  cleanup
fi
